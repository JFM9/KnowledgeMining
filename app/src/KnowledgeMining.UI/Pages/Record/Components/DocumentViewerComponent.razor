@using KnowledgeMining.Domain.Entities
@using KnowledgeMining.UI.Services.Links
@inject ILinkGenerator LinkGenerator;


@if(RenderInline(documentExtention))
{
    <iframe class="file-container" width="100%" src="@DocumentUri" type="@contentType">
        This browser does not support @(contentType). Please download the file to view it.
    </iframe>
}
else
{
    <MudText>Document Viewer not available for extension '@documentExtention'</MudText>
}

@code {
    [Parameter]
    public DocumentMetadata Document { get; set; }
    public string? DocumentUri { get; set; }

    private string documentExtention = FileExtensions.UNKNOWN;
    private string contentType = string.Empty;
    private bool loading = true;

    protected override void OnParametersSet()
    {
        DocumentUri = LinkGenerator.GenerateDocumentPreviewUrl(Document);
        documentExtention = Document.SourcePath?.GetFileExtension() ?? Document.Name?.GetFileExtension() ?? string.Empty;
        contentType = FileExtensions.GetContentTypeForFileExtension(documentExtention);
    }

    private bool RenderInline(string extension)
    {
        switch (extension) 
        {
            case FileExtensions.PDF:
            case FileExtensions.TXT:
            case FileExtensions.JSON:
            case FileExtensions.MSG:
            case FileExtensions.EML:
                return true;
        }

        return false;
    }
}
