@using KnowledgeMining.Application.Documents.Queries.GetIndex
@using KnowledgeMining.Domain.Entities
@using MediatR

@inject NavigationManager NavigationManager;
@inject IMediator Mediator;


<MudAppBar Style="@($"color: {Theme.Palette.Black};background: {Theme.Palette.White}")" Elevation="1">
    <MudStack Spacing="4" Row="true">
        <MudImage Src="images/gac-logo-en.svg" Height="25" Elevation="0" onclick="@(() => NavigateToHomePage())" />
        <MudButton Variant="Variant.Text" OnClick="NavigateToSearchPage">Search</MudButton>
        @*<MudButton Variant="Variant.Text" OnClick="@NavigateToDocumentsPage">Documents</MudButton>*@
        @if(indexNavigationItems != null)
        {
            foreach(var nav in indexNavigationItems)
            {
                if (nav.Type == "embed")
                {
                    <MudButton Variant="Variant.Text" Href="@($"/external/{IndexName}/{nav.Id}")">@nav.Name</MudButton>
                }
                else
                {
                    <MudButton Variant="Variant.Text" Href="@nav.Url">@nav.Name</MudButton>
                }
            }
        }
    </MudStack>
    <MudSpacer />
    <MudText Typo="Typo.button" Align="Align.Right">SICY</MudText>
</MudAppBar>

@code {
    [CascadingParameter]
    public RouteData? RouteData { get; set; }

    private IEnumerable<IndexNavigationItem>? indexNavigationItems;
    private string? IndexName { get; set; }
    private MudTheme Theme = new MudTheme();

    protected override async Task OnInitializedAsync()
    {
        if(RouteData?.RouteValues.ContainsKey("Index") ?? false)
        {
            IndexName = RouteData?.RouteValues["Index"]?.ToString();

            var response = await Mediator.Send(new GetIndexQuery(IndexName));
            indexNavigationItems = response.IndexItem.NavigationItems;
        }

        await base.OnInitializedAsync();
    }

    private void NavigateToHomePage()
    {
        NavigationManager.NavigateTo($"/{IndexName}");
    }

    private void NavigateToSearchPage()
    {
        NavigationManager.NavigateTo($"/search/{IndexName}/");
    }

    private void NavigateToDocumentsPage()
    {
        NavigationManager.NavigateTo($"/documents/{IndexName}/");
    }
}